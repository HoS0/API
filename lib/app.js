// Generated by CoffeeScript 1.9.3
(function() {
  var DataManager, amqp, app, credential, exec, express, http, index, mkdirp, name, path, server, users, uuid, ws;

  express = require('express');

  index = require('./routes/index.js');

  http = require('http');

  exec = require('child_process');

  mkdirp = require('mkdirp');

  amqp = require('AMQP-boilerplate');

  path = require('path');

  ws = require('nodejs-websocket');

  uuid = require('uuid');

  name = 'api';

  DataManager = 'datamanager';

  users = [];

  app = express();

  app.set('port', 8080);

  app.set('views', path.join(__dirname, '../views'));

  app.set('view engine', 'html');

  app.use(express["static"](path.join(__dirname, '../public')));

  app.get('/', index.index);

  http.createServer(app).listen(app.get('port'), function() {
    return console.log('Express server listening on port ' + app.get('port'));
  });

  server = ws.createServer(function(conn) {
    var id;
    console.log("New connection");
    id = uuid.v4();
    conn.on("text", function(str) {
      var e, obj, res;
      console.log("Received " + str);
      try {
        obj = JSON.parse(str);
        if (obj.type === 'credential') {
          return credential(conn, obj);
        }
      } catch (_error) {
        e = _error;
        res = {
          type: 'other'
        };
        res.login = false;
        res.message = "error on communication";
        return conn.sendText(JSON.stringify(res));
      }
    });
    return conn.on("close", function(code, reason) {
      return console.log("Connection closed");
    });
  }).listen(8001);

  credential = function(conn, obj) {
    var res, token;
    res = {
      type: 'credential'
    };
    console.log(obj);
    if (obj.user === "ali" && obj.pass === "alikh") {
      token = uuid.v4();
      users.push(token);
      res.token = token;
      res.login = true;
    } else {
      res.login = false;
      res.message = "wrong user or pass";
    }
    return conn.sendText(JSON.stringify(res));
  };

}).call(this);
